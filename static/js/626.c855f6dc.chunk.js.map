{"version":3,"file":"static/js/626.c855f6dc.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://phone-bock/./src/components/FormInput/FormInput.module.css?448d","components/FormInput/FormInput.js","webpack://phone-bock/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","webpack://phone-bock/./src/components/ContactsItem/ContactsItem.module.css?8722","components/ContactsItem/ContactItem.js","components/ContactsList/ContactsList.js","webpack://phone-bock/./src/pages/PhoneBook.module.css?149f","pages/PhoneBook.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\r\nexport const selectIsLoading = state => state.contacts.isLoading;\r\nexport const selectError = state => state.contacts.error;\r\nexport const selectFilter = state => state.filter;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"FormInput_form__OJkZ1\",\"lable\":\"FormInput_lable__u22b+\",\"btn\":\"FormInput_btn__caBee\"};","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { addContact } from '../../redux/contacts/operations';\r\n\r\nimport css from './FormInput.module.css';\r\n\r\nexport const FormInput = () => {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = (name, number) => {\r\n    dispatch(addContact({ name, number }));\r\n  };\r\n  const hendleNameChange = event => {\r\n    setName(event.target.value);\r\n  };\r\n  const hendlePhoneChange = event => {\r\n    setNumber(event.target.value);\r\n  };\r\n\r\n  const hendleSave = event => {\r\n    event.preventDefault();\r\n\r\n    onSubmit(name, number);\r\n\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={css.form} onSubmit={hendleSave}>\r\n      <label>\r\n        Name\r\n        <input\r\n          className={css.lable}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          value={name}\r\n          onChange={hendleNameChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <label>\r\n        Phone\r\n        <input\r\n          className={css.lable}\r\n          type=\"tel\"\r\n          name=\"phone\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          value={number}\r\n          onChange={hendlePhoneChange}\r\n        />\r\n      </label>\r\n      <br />\r\n      <button className={css.btn} type=\"submit\">\r\n        Save\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Filter_form__VelZE\",\"label\":\"Filter_label__C3wax\"};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { changeFilter } from '../../redux/contacts/filterSlice';\r\n\r\nimport css from './Filter.module.css';\r\n\r\nexport const Filter = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = e => {\r\n    dispatch(changeFilter(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <form className={css.form}>\r\n      <label className={css.label}>\r\n        Find contacts by name\r\n        <br />\r\n        <input type=\"text\" onChange={onChangeFilter}></input>\r\n      </label>\r\n    </form>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"listItem\":\"ContactsItem_listItem__L0WTR\",\"contactBlock\":\"ContactsItem_contactBlock__OTDCe\",\"contacts\":\"ContactsItem_contacts__PQxEp\",\"removeBtn\":\"ContactsItem_removeBtn__fqcRg\",\"form\":\"ContactsItem_form__qY1ak\",\"inputBlock\":\"ContactsItem_inputBlock__7UCSX\",\"inputChange\":\"ContactsItem_inputChange__bohtu\"};","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport css from './ContactsItem.module.css';\r\nimport { useDispatch } from 'react-redux';\r\nimport { changeContact } from '../../redux/contacts/operations';\r\n\r\nexport const ContactItem = ({ contact, onRemoveContact }) => {\r\n  const [editContactId, setEditContactId] = useState('');\r\n  const [editName, setEditName] = useState('');\r\n  const [editNumber, setEditNumber] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const editUserContact = (id, name, number) => {\r\n    setEditContactId(id);\r\n    setEditName(name);\r\n    setEditNumber(number);\r\n  };\r\n\r\n  const saveContactChanges = e => {\r\n    e.preventDefault();\r\n\r\n    setEditContactId('');\r\n    setEditName('');\r\n    setEditNumber('');\r\n    dispatch(changeContact({ id: editContactId, name: editName, number: editNumber }));\r\n  };\r\n\r\n  return (\r\n    <li className={css.listItem}>\r\n      {contact.id !== editContactId ? (\r\n        <div className={css.contactBlock}>\r\n          <div className={css.contacts}>\r\n            <p>{contact.name}:</p>\r\n            <p>{contact.number}</p>\r\n          </div>\r\n          <div>\r\n            <button\r\n              className={css.removeBtn}\r\n              onClick={() => onRemoveContact(contact.id)}\r\n              type=\"button\"\r\n            >\r\n              Remove\r\n            </button>\r\n            <button\r\n              onClick={() => editUserContact(contact.id, contact.name, contact.number)}\r\n              type=\"button\"\r\n            >\r\n              Edit\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <form className={css.form} onSubmit={saveContactChanges}>\r\n          <div className={css.inputBlock}>\r\n            <input\r\n              className={css.inputChange}\r\n              value={editName}\r\n              onChange={e => setEditName(e.currentTarget.value)}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n              required\r\n            />\r\n            <input\r\n              className={css.inputChange}\r\n              value={editNumber}\r\n              onChange={e => setEditNumber(e.currentTarget.value)}\r\n              type=\"tel\"\r\n              name=\"phone\"\r\n              placeholder=\"phone\"\r\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n              required\r\n            />\r\n          </div>\r\n          <div>\r\n            <button\r\n              className={css.removeBtn}\r\n              onClick={() => onRemoveContact(contact.id)}\r\n              type=\"button\"\r\n            >\r\n              Remove\r\n            </button>\r\n            <button type=\"submit\">save</button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </li>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    }),\r\n  ),\r\n  onRemoveContact: PropTypes.func.isRequired,\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { deleteContact } from '../../redux/contacts/operations';\r\nimport { selectContacts, selectFilter } from '../../redux/contacts/selectors';\r\nimport { ContactItem } from '../ContactsItem/ContactItem';\r\n\r\nimport css from './ContactsList.module.css';\r\n\r\nexport const ContactsList = () => {\r\n  let contacts = useSelector(selectContacts);\r\n  const filter = useSelector(selectFilter);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onRemoveContact = id => {\r\n    dispatch(deleteContact(id));\r\n  };\r\n\r\n  if (filter !== '') {\r\n    const normalizedFilter = filter.toLowerCase();\r\n    const filteredContact = contacts.filter(itm =>\r\n      itm.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n    contacts = filteredContact;\r\n  }\r\n\r\n  return (\r\n    <ul>\r\n      {contacts.map(contacts => (\r\n        <ContactItem key={contacts.id} contact={contacts} onRemoveContact={onRemoveContact} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PhoneBook_title__LbEL7\"};","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { selectContacts } from '../redux/contacts/selectors';\r\nimport { fetchContacts } from '../redux/contacts/operations';\r\nimport { FormInput } from '../components/FormInput/FormInput';\r\nimport { Filter } from '../components/Filter/Filter';\r\nimport { ContactsList } from '../components/ContactsList/ContactsList';\r\n\r\nimport css from './PhoneBook.module.css';\r\n\r\nexport default function Tasks() {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(selectContacts);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1 className={css.title}>Phone Book</h1>\r\n      <FormInput />\r\n      {contacts.length >= 1 ? (\r\n        <>\r\n          <Filter />\r\n          <h2 className={css.title}> Contacts</h2>\r\n          <ContactsList />\r\n        </>\r\n      ) : (\r\n        <h2 className={css.title}>Create your first contact</h2>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"],"names":["selectContacts","state","contacts","items","selectFilter","filter","FormInput","useState","name","setName","number","setNumber","dispatch","useDispatch","reset","className","css","onSubmit","event","preventDefault","addContact","type","pattern","title","required","value","onChange","target","Filter","e","changeFilter","ContactItem","contact","onRemoveContact","editContactId","setEditContactId","editName","setEditName","editNumber","setEditNumber","id","onClick","changeContact","currentTarget","placeholder","ContactsList","useSelector","deleteContact","normalizedFilter","toLowerCase","filteredContact","itm","includes","map","Tasks","useEffect","fetchContacts","length"],"sourceRoot":""}